0654030b2248f16c8caaf5960c81c3b6
"use strict";

/* istanbul ignore next */
function cov_24zvj52rqp() {
  var path = "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\mocks\\logInService.mock.ts";
  var hash = "e55584137955b997cc9f5da5a95bab3b8e6b791d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\mocks\\logInService.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 21
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 16
          }
        },
        line: 6
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\mocks\\logInService.mock.ts",
      mappings: ";;;AAEA,MAAa,gBAAgB;IAC3B,WAAW,KAAW,CAAC;IAIvB,MAAM,KAAW,CAAC;CACnB;AAND,4CAMC",
      names: [],
      sources: ["C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\mocks\\logInService.mock.ts"],
      sourcesContent: ["import { User } from \"../models/user\";\r\n\r\nexport class LogInServiceMock {\r\n  setUserData(): void { }\r\n\r\n\r\n\r\n  getOne(): void { }\r\n}\r\n\r\nexport interface LogInServiceResponseMock {\r\n  token: string,\r\n  user: User\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e55584137955b997cc9f5da5a95bab3b8e6b791d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24zvj52rqp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24zvj52rqp();
cov_24zvj52rqp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_24zvj52rqp().s[1]++;
exports.LogInServiceMock = void 0;
class LogInServiceMock {
  setUserData() {
    /* istanbul ignore next */
    cov_24zvj52rqp().f[0]++;
  }
  getOne() {
    /* istanbul ignore next */
    cov_24zvj52rqp().f[1]++;
  }
}
/* istanbul ignore next */
cov_24zvj52rqp().s[2]++;
exports.LogInServiceMock = LogInServiceMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2dJblNlcnZpY2VNb2NrIiwic2V0VXNlckRhdGEiLCJjb3ZfMjR6dmo1MnJxcCIsImYiLCJnZXRPbmUiLCJzIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXN1YXJpb1xccmVwb3MoRGVzYXJyb2xsbylcXFRQLWRzdy1mcm9udFxcc3JjXFxhcHBcXG1vY2tzXFxsb2dJblNlcnZpY2UubW9jay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyIH0gZnJvbSBcIi4uL21vZGVscy91c2VyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTG9nSW5TZXJ2aWNlTW9jayB7XHJcbiAgc2V0VXNlckRhdGEoKTogdm9pZCB7IH1cclxuXHJcblxyXG5cclxuICBnZXRPbmUoKTogdm9pZCB7IH1cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBMb2dJblNlcnZpY2VSZXNwb25zZU1vY2sge1xyXG4gIHRva2VuOiBzdHJpbmcsXHJcbiAgdXNlcjogVXNlclxyXG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxNQUFhQSxnQkFBZ0I7RUFDM0JDLFdBQVdBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBVztFQUl0QkMsTUFBTUEsQ0FBQTtJQUFBO0lBQUFGLGNBQUEsR0FBQUMsQ0FBQTtFQUFXOztBQUNsQjtBQUFBRCxjQUFBLEdBQUFHLENBQUE7QUFOREMsT0FBQSxDQUFBTixnQkFBQSxHQUFBQSxnQkFBQSJ9