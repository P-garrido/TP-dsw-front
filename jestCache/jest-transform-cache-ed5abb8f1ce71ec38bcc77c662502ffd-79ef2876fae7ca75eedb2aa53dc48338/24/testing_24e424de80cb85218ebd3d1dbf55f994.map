{
  "version": 3,
  "sources": ["C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\node_modules\\@angular\\platform-browser-dynamic\\fesm2022\\testing.mjs"],
  "sourcesContent": ["/**\n * @license Angular v16.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { \u0275platformCoreDynamic, \u0275INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { \u0275getDOM, DOCUMENT } from '@angular/common';\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    insertRootElement(rootElId) {\n        this.removeAllRootElements();\n        const rootElement = \u0275getDOM().getDefaultDocument().createElement('div');\n        rootElement.setAttribute('id', rootElId);\n        this._doc.body.appendChild(rootElement);\n    }\n    removeAllRootElements() {\n        // TODO(juliemr): can/should this be optional?\n        const oldRoots = this._doc.querySelectorAll('[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            \u0275getDOM().remove(oldRoots[i]);\n        }\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: DOMTestComponentRenderer, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: DOMTestComponentRenderer }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: DOMTestComponentRenderer, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Platform for dynamic tests\n *\n * @publicApi\n */\nconst platformCoreDynamicTesting = createPlatformFactory(\u0275platformCoreDynamic, 'coreDynamicTesting', []);\n\n/**\n * @publicApi\n */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', \u0275INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserDynamicTestingModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BrowserDynamicTestingModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: BrowserDynamicTestingModule, exports: [BrowserTestingModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BrowserDynamicTestingModule, providers: [\n            { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n        ], imports: [BrowserTestingModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BrowserDynamicTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserTestingModule],\n                    providers: [\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                }]\n        }] });\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, DOMTestComponentRenderer as \u0275DOMTestComponentRenderer, platformCoreDynamicTesting as \u0275platformCoreDynamicTesting };\n//# sourceMappingURL=testing.mjs.map\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAoB;AACpB,kBAAoE;AACpE,qBAAsC;AACtC,sCAAmF;AACnF,IAAAA,kBAAqC;AACrC,oBAAkC;AAXlC;AAAA;AAAA;AAAA;AAAA;AAgBA,MAAM,4BAAN,MAAM,kCAAiC,qCAAsB;AAAA,EACzD,YAAY,MAAM;AACd,UAAM;AACN,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,kBAAkB,UAAU;AACxB,SAAK,sBAAsB;AAC3B,UAAM,kBAAc,4BAAQ,EAAE,mBAAmB,EAAE,cAAc,KAAK;AACtE,gBAAY,aAAa,MAAM,QAAQ;AACvC,SAAK,KAAK,KAAK,YAAY,WAAW;AAAA,EAC1C;AAAA,EACA,wBAAwB;AAEpB,UAAM,WAAW,KAAK,KAAK,iBAAiB,YAAY;AACxD,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,sCAAQ,EAAE,OAAO,SAAS,CAAC,CAAC;AAAA,IAChC;AAAA,EACJ;AAGJ;AAFa,0BAAK,YAAO,GAAG,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,2BAA0B,MAAM,CAAC,EAAE,OAAO,uBAAS,CAAC,GAAG,QAAQ,GAAG,0BAAgB,WAAW,CAAC;AAC/L,0BAAK,aAAQ,GAAG,gCAAsB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,0BAAyB,CAAC;AAnB5I,IAAM,2BAAN;AAqBA,GAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,0BAA0B,YAAY,CAAC;AAAA,EACtH,MAAM;AACV,CAAC,GAAG,gBAAgB,WAAY;AAAE,SAAO,CAAC,EAAE,MAAM,QAAW,YAAY,CAAC;AAAA,IAC9D,MAAM;AAAA,IACN,MAAM,CAAC,sBAAQ;AAAA,EACnB,CAAC,EAAE,CAAC;AAAG,EAAE,CAAC;AAO1B,MAAM,iCAA6B,mCAAsB,2DAAsB,sBAAsB,CAAC,CAAC;AAKvG,MAAM,oCAAgC,mCAAsB,4BAA4B,yBAAyB,iFAA4C;AAM7J,MAAM,+BAAN,MAAM,6BAA4B;AAMlC;AALa,6BAAK,YAAO,GAAG,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,8BAA6B,MAAM,CAAC,GAAG,QAAQ,GAAG,0BAAgB,SAAS,CAAC;AAC7K,6BAAK,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,8BAA6B,SAAS,CAAC,oCAAoB,EAAE,CAAC;AAChK,6BAAK,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,8BAA6B,WAAW;AAAA,EAC3I,EAAE,SAAS,sCAAuB,UAAU,yBAAyB;AACzE,GAAG,SAAS,CAAC,oCAAoB,EAAE,CAAC;AAL5C,IAAM,8BAAN;AAOA,GAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,6BAA6B,YAAY,CAAC;AAAA,EACzH,MAAM;AAAA,EACN,MAAM,CAAC;AAAA,IACC,SAAS,CAAC,oCAAoB;AAAA,IAC9B,WAAW;AAAA,MACP,EAAE,SAAS,sCAAuB,UAAU,yBAAyB;AAAA,IACzE;AAAA,EACJ,CAAC;AACT,CAAC,EAAE,CAAC;",
  "names": ["import_testing"]
}
