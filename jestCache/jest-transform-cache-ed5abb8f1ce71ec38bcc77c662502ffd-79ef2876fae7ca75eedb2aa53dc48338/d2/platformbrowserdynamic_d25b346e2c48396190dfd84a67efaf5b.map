{
  "version": 3,
  "sources": ["C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\node_modules\\@angular\\platform-browser-dynamic\\fesm2022\\platform-browser-dynamic.mjs"],
  "sourcesContent": ["/**\n * @license Angular v16.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { Compiler, ViewEncapsulation, MissingTranslationStrategy, Injector, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, \u0275global, Version } from '@angular/core';\nimport { \u0275PLATFORM_BROWSER_ID } from '@angular/common';\nimport { \u0275INTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\nconst COMPILER_PROVIDERS = [{ provide: Compiler, useFactory: () => new Compiler() }];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nclass JitCompilerFactory {\n    /** @internal */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    createCompiler(options = []) {\n        const opts = _mergeOptions(this._defaultOptions.concat(options));\n        const injector = Injector.create({\n            providers: [\n                COMPILER_PROVIDERS, {\n                    provide: CompilerConfig,\n                    useFactory: () => {\n                        return new CompilerConfig({\n                            // let explicit values from the compiler options overwrite options\n                            // from the app providers\n                            useJit: opts.useJit,\n                            // let explicit values from the compiler options overwrite options\n                            // from the app providers\n                            defaultEncapsulation: opts.defaultEncapsulation,\n                            missingTranslation: opts.missingTranslation,\n                            preserveWhitespaces: opts.preserveWhitespaces,\n                        });\n                    },\n                    deps: []\n                },\n                opts.providers\n            ]\n        });\n        return injector.get(Compiler);\n    }\n}\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n        defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map(options => options.providers)),\n        missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n        preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n    };\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nconst platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n]);\n\nclass ResourceLoaderImpl extends ResourceLoader {\n    get(url) {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            const response = xhr.response;\n            let status = xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(`Failed to load ${url}`);\n            }\n        };\n        xhr.onerror = function () {\n            reject(`Failed to load ${url}`);\n        };\n        xhr.send();\n        return promise;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ResourceLoaderImpl, deps: null, target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ResourceLoaderImpl }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ResourceLoaderImpl, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @publicApi\n */\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    \u0275INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true\n    },\n    { provide: PLATFORM_ID, useValue: \u0275PLATFORM_BROWSER_ID },\n];\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n *\n * @deprecated This was previously necessary in some cases to test AOT-compiled components with View\n *     Engine, but is no longer since Ivy.\n */\nclass CachedResourceLoader extends ResourceLoader {\n    constructor() {\n        super();\n        this._cache = \u0275global.$templateCache;\n        if (this._cache == null) {\n            throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n        }\n    }\n    get(url) {\n        if (this._cache.hasOwnProperty(url)) {\n            return Promise.resolve(this._cache[url]);\n        }\n        else {\n            return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n        }\n    }\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('16.2.0');\n\n/**\n * @publicApi\n *\n * @deprecated This was previously necessary in some cases to test AOT-compiled components with View\n *     Engine, but is no longer since Ivy.\n\n */\nconst RESOURCE_CACHE_PROVIDER = [{ provide: ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\n/**\n * @publicApi\n */\nconst platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as \u0275INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, platformCoreDynamic as \u0275platformCoreDynamic };\n//# sourceMappingURL=platform-browser-dynamic.mjs.map\n"],
  "mappings": "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",
  "names": []
}
