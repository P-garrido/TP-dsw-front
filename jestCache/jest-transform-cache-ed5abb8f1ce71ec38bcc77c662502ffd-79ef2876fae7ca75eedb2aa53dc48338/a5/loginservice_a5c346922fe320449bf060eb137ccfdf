06d16c9b11117e7a117c4dce0f9fef1b
"use strict";

/* istanbul ignore next */
function cov_7buzdepi() {
  var path = "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\log-in.service.ts";
  var hash = "7de2360ff815ffdd1bc04c52c0b3862165dfe632";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\log-in.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 39
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "7": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "13": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 115
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 72
        }
      },
      "16": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "17": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 100
        }
      },
      "18": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 29,
          column: 58
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "21": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "23": {
        start: {
          line: 38,
          column: 44
        },
        end: {
          line: 38,
          column: 73
        }
      },
      "24": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "25": {
        start: {
          line: 40,
          column: 41
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "26": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "27": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 39
          }
        },
        loc: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 73
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 40,
            column: 36
          }
        },
        loc: {
          start: {
            line: 40,
            column: 41
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 17,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 60
          }
        }, {
          start: {
            line: 17,
            column: 63
          },
          end: {
            line: 17,
            column: 114
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 18,
            column: 62
          }
        }, {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 18,
            column: 71
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 37,
            column: 9
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\log-in.service.ts",
      mappings: ";;;;AAAA,wCAA2C;AAC3C,+CAAqE;AACrE,wCAAqC;AACrC,+BAA8C;AAC9C,IAGa,YAAY,GAHzB,MAGa,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAS3B,YAAO,GAAG,6BAA6B,CAAC;QAEjD,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAS,IAAI,WAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAGnD,sBAAiB,GAAG,WAAW,CAAC;QAbrC,MAAM,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,WAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACpG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;IAClE,CAAC;IAcD,WAAW,CAAC,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,6CAA6C;QAC7C,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9F,CAAC;IAID,MAAM,CAAC,IAAY,EAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,EAAE;YACvC,cAAc,EAAE,IAAI;YACpB,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAU,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAA;IACvC,CAAC;IAEO,WAAW,CAAC,KAAwB;QAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,KAAK,CAAC,4CAA4C,CAAC,CAAC;SACrD;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9D;QAED,OAAO,IAAA,iBAAU,EAAC,GAAG,EAAE,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACzD,CAAC;;;;;AA7CU,YAAY;IAHxB,IAAA,iBAAU,EAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;6CAI0B,iBAAU;GAHzB,YAAY,CA8CxB;AA9CY,oCAAY",
      names: [],
      sources: ["C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\src\\app\\log-in.service.ts"],
      sourcesContent: ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from './models/user';\r\nimport { catchError, throwError } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogInService {\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n    const storedData = sessionStorage.getItem(this.sessionStorageKey);\r\n    this.user = storedData ? JSON.parse(storedData).data : new User(-1, \"\", \"\", \"\", \"\", \"\", \"\", -1, \"\");\r\n    this.token = storedData ? JSON.parse(storedData).token : String;\r\n  }\r\n\r\n\r\n\r\n  readonly baseUrl = \"http://localhost:1234/login\";\r\n\r\n  token: any = \"\";\r\n  user: User = new User(-1, \"\", \"\", \"\", \"\", \"\", \"\", -1, \"\");\r\n\r\n\r\n  public sessionStorageKey = 'user_data';\r\n\r\n\r\n\r\n  setUserData(data: User) {\r\n    this.user = data;\r\n    // Almacenar datos en el almacenamiento local\r\n    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify({ data, token: this.token }));\r\n  }\r\n\r\n\r\n\r\n  getOne(user: string, pass: number) {\r\n    return this.http.post<any>(this.baseUrl, {\r\n      nombre_usuario: user,\r\n      clave: pass\r\n    }).pipe(catchError(this.handleError))\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.status === 404) {\r\n      alert('Nombre de usuario o contrasena incorrectos');\r\n    } else {\r\n      console.error('Ocurri\xF3 un error inesperado:', error.message);\r\n    }\r\n\r\n    return throwError(() => new Error('Ocurrio un error'));\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7de2360ff815ffdd1bc04c52c0b3862165dfe632"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7buzdepi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7buzdepi();
cov_7buzdepi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7buzdepi().s[1]++;
exports.LogInService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_7buzdepi().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_7buzdepi().s[3]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_7buzdepi().s[4]++, require("@angular/common/http"));
const user_1 =
/* istanbul ignore next */
(cov_7buzdepi().s[5]++, require("./models/user"));
const rxjs_1 =
/* istanbul ignore next */
(cov_7buzdepi().s[6]++, require("rxjs"));
/* istanbul ignore next */
cov_7buzdepi().s[7]++;
let LogInService = class LogInService {
  constructor(http) {
    /* istanbul ignore next */
    cov_7buzdepi().f[0]++;
    cov_7buzdepi().s[8]++;
    this.http = http;
    /* istanbul ignore next */
    cov_7buzdepi().s[9]++;
    this.baseUrl = "http://localhost:1234/login";
    /* istanbul ignore next */
    cov_7buzdepi().s[10]++;
    this.token = "";
    /* istanbul ignore next */
    cov_7buzdepi().s[11]++;
    this.user = new user_1.User(-1, "", "", "", "", "", "", -1, "");
    /* istanbul ignore next */
    cov_7buzdepi().s[12]++;
    this.sessionStorageKey = 'user_data';
    const storedData =
    /* istanbul ignore next */
    (cov_7buzdepi().s[13]++, sessionStorage.getItem(this.sessionStorageKey));
    /* istanbul ignore next */
    cov_7buzdepi().s[14]++;
    this.user = storedData ?
    /* istanbul ignore next */
    (cov_7buzdepi().b[0][0]++, JSON.parse(storedData).data) :
    /* istanbul ignore next */
    (cov_7buzdepi().b[0][1]++, new user_1.User(-1, "", "", "", "", "", "", -1, ""));
    /* istanbul ignore next */
    cov_7buzdepi().s[15]++;
    this.token = storedData ?
    /* istanbul ignore next */
    (cov_7buzdepi().b[1][0]++, JSON.parse(storedData).token) :
    /* istanbul ignore next */
    (cov_7buzdepi().b[1][1]++, String);
  }
  setUserData(data) {
    /* istanbul ignore next */
    cov_7buzdepi().f[1]++;
    cov_7buzdepi().s[16]++;
    this.user = data;
    // Almacenar datos en el almacenamiento local
    /* istanbul ignore next */
    cov_7buzdepi().s[17]++;
    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify({
      data,
      token: this.token
    }));
  }
  getOne(user, pass) {
    /* istanbul ignore next */
    cov_7buzdepi().f[2]++;
    cov_7buzdepi().s[18]++;
    return this.http.post(this.baseUrl, {
      nombre_usuario: user,
      clave: pass
    }).pipe((0, rxjs_1.catchError)(this.handleError));
  }
  handleError(error) {
    /* istanbul ignore next */
    cov_7buzdepi().f[3]++;
    cov_7buzdepi().s[19]++;
    if (error.status === 404) {
      /* istanbul ignore next */
      cov_7buzdepi().b[2][0]++;
      cov_7buzdepi().s[20]++;
      alert('Nombre de usuario o contrasena incorrectos');
    } else {
      /* istanbul ignore next */
      cov_7buzdepi().b[2][1]++;
      cov_7buzdepi().s[21]++;
      console.error('Ocurrió un error inesperado:', error.message);
    }
    /* istanbul ignore next */
    cov_7buzdepi().s[22]++;
    return (0, rxjs_1.throwError)(() => {
      /* istanbul ignore next */
      cov_7buzdepi().f[4]++;
      cov_7buzdepi().s[23]++;
      return new Error('Ocurrio un error');
    });
  }
  static {
    /* istanbul ignore next */
    cov_7buzdepi().s[24]++;
    this.ctorParameters = () => {
      /* istanbul ignore next */
      cov_7buzdepi().f[5]++;
      cov_7buzdepi().s[25]++;
      return [{
        type: http_1.HttpClient
      }];
    };
  }
};
/* istanbul ignore next */
cov_7buzdepi().s[26]++;
LogInService = tslib_1.__decorate([(0, core_1.Injectable)({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], LogInService);
/* istanbul ignore next */
cov_7buzdepi().s[27]++;
exports.LogInService = LogInService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfN2J1emRlcGkiLCJhY3R1YWxDb3ZlcmFnZSIsInMiLCJjb3JlXzEiLCJyZXF1aXJlIiwiaHR0cF8xIiwidXNlcl8xIiwicnhqc18xIiwiTG9nSW5TZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJodHRwIiwiZiIsImJhc2VVcmwiLCJ0b2tlbiIsInVzZXIiLCJVc2VyIiwic2Vzc2lvblN0b3JhZ2VLZXkiLCJzdG9yZWREYXRhIiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRJdGVtIiwiYiIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJTdHJpbmciLCJzZXRVc2VyRGF0YSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJnZXRPbmUiLCJwYXNzIiwicG9zdCIsIm5vbWJyZV91c3VhcmlvIiwiY2xhdmUiLCJwaXBlIiwiY2F0Y2hFcnJvciIsImhhbmRsZUVycm9yIiwiZXJyb3IiLCJzdGF0dXMiLCJhbGVydCIsImNvbnNvbGUiLCJtZXNzYWdlIiwidGhyb3dFcnJvciIsIkVycm9yIiwidHNsaWJfMSIsIl9fZGVjb3JhdGUiLCJJbmplY3RhYmxlIiwicHJvdmlkZWRJbiIsIkh0dHBDbGllbnQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVc3VhcmlvXFxyZXBvcyhEZXNhcnJvbGxvKVxcVFAtZHN3LWZyb250XFxzcmNcXGFwcFxcbG9nLWluLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4vbW9kZWxzL3VzZXInO1xyXG5pbXBvcnQgeyBjYXRjaEVycm9yLCB0aHJvd0Vycm9yIH0gZnJvbSAncnhqcyc7XHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExvZ0luU2VydmljZSB7XHJcblxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHtcclxuXHJcbiAgICBjb25zdCBzdG9yZWREYXRhID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnNlc3Npb25TdG9yYWdlS2V5KTtcclxuICAgIHRoaXMudXNlciA9IHN0b3JlZERhdGEgPyBKU09OLnBhcnNlKHN0b3JlZERhdGEpLmRhdGEgOiBuZXcgVXNlcigtMSwgXCJcIiwgXCJcIiwgXCJcIiwgXCJcIiwgXCJcIiwgXCJcIiwgLTEsIFwiXCIpO1xyXG4gICAgdGhpcy50b2tlbiA9IHN0b3JlZERhdGEgPyBKU09OLnBhcnNlKHN0b3JlZERhdGEpLnRva2VuIDogU3RyaW5nO1xyXG4gIH1cclxuXHJcblxyXG5cclxuICByZWFkb25seSBiYXNlVXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjEyMzQvbG9naW5cIjtcclxuXHJcbiAgdG9rZW46IGFueSA9IFwiXCI7XHJcbiAgdXNlcjogVXNlciA9IG5ldyBVc2VyKC0xLCBcIlwiLCBcIlwiLCBcIlwiLCBcIlwiLCBcIlwiLCBcIlwiLCAtMSwgXCJcIik7XHJcblxyXG5cclxuICBwdWJsaWMgc2Vzc2lvblN0b3JhZ2VLZXkgPSAndXNlcl9kYXRhJztcclxuXHJcblxyXG5cclxuICBzZXRVc2VyRGF0YShkYXRhOiBVc2VyKSB7XHJcbiAgICB0aGlzLnVzZXIgPSBkYXRhO1xyXG4gICAgLy8gQWxtYWNlbmFyIGRhdG9zIGVuIGVsIGFsbWFjZW5hbWllbnRvIGxvY2FsXHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHRoaXMuc2Vzc2lvblN0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KHsgZGF0YSwgdG9rZW46IHRoaXMudG9rZW4gfSkpO1xyXG4gIH1cclxuXHJcblxyXG5cclxuICBnZXRPbmUodXNlcjogc3RyaW5nLCBwYXNzOiBudW1iZXIpIHtcclxuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxhbnk+KHRoaXMuYmFzZVVybCwge1xyXG4gICAgICBub21icmVfdXN1YXJpbzogdXNlcixcclxuICAgICAgY2xhdmU6IHBhc3NcclxuICAgIH0pLnBpcGUoY2F0Y2hFcnJvcih0aGlzLmhhbmRsZUVycm9yKSlcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaGFuZGxlRXJyb3IoZXJyb3I6IEh0dHBFcnJvclJlc3BvbnNlKSB7XHJcbiAgICBpZiAoZXJyb3Iuc3RhdHVzID09PSA0MDQpIHtcclxuICAgICAgYWxlcnQoJ05vbWJyZSBkZSB1c3VhcmlvIG8gY29udHJhc2VuYSBpbmNvcnJlY3RvcycpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5lcnJvcignT2N1cnJpw7MgdW4gZXJyb3IgaW5lc3BlcmFkbzonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhyb3dFcnJvcigoKSA9PiBuZXcgRXJyb3IoJ09jdXJyaW8gdW4gZXJyb3InKSk7XHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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