{
  "version": 3,
  "sources": ["C:\\Users\\Usuario\\repos(Desarrollo)\\TP-dsw-front\\node_modules\\ngx-bootstrap\\accordion\\fesm2022\\ngx-bootstrap-accordion.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, EventEmitter, Inject, Output, HostBinding, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ngx-bootstrap/collapse';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\n/**\n * Configuration service, provides default values for the AccordionComponent.\n */\nclass AccordionConfig {\n    constructor() {\n        /** Whether the other panels should be closed when a panel is opened */\n        this.closeOthers = false;\n        /** turn on/off animation */\n        this.isAnimated = false;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionConfig, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionConfig, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\nclass AccordionComponent {\n    constructor(config) {\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** if `true` expanding one item will close all others */\n        this.closeOthers = false;\n        this.groups = [];\n        Object.assign(this, config);\n    }\n    closeOtherPanels(openGroup) {\n        if (!this.closeOthers) {\n            return;\n        }\n        this.groups.forEach((group) => {\n            if (group !== openGroup) {\n                group.isOpen = false;\n            }\n        });\n    }\n    addGroup(group) {\n        group.isAnimated = this.isAnimated;\n        this.groups.push(group);\n    }\n    removeGroup(group) {\n        const index = this.groups.indexOf(group);\n        if (index !== -1) {\n            this.groups.splice(index, 1);\n        }\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionComponent, deps: [{ token: AccordionConfig }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: AccordionComponent, selector: \"accordion\", inputs: { isAnimated: \"isAnimated\", closeOthers: \"closeOthers\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"attr.aria-multiselectable\": \"closeOthers\" }, styleAttribute: \"display: block\", classAttribute: \"panel-group\" }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'accordion',\n                    template: `<ng-content></ng-content>`,\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[attr.aria-multiselectable]': 'closeOthers',\n                        role: 'tablist',\n                        class: 'panel-group',\n                        style: 'display: block'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: AccordionConfig }]; }, propDecorators: { isAnimated: [{\n                type: Input\n            }], closeOthers: [{\n                type: Input\n            }] } });\n\n/**\n * ### Accordion heading\n * Instead of using `heading` attribute on the `accordion-group`, you can use\n * an `accordion-heading` attribute on `any` element inside of a group that\n * will be used as group's header template.\n */\nclass AccordionPanelComponent {\n    // Questionable, maybe .panel-open should be on child div.panel element?\n    /** Is accordion group open or closed. This property supports two-way binding */\n    get isOpen() {\n        return this._isOpen;\n    }\n    set isOpen(value) {\n        if (value !== this.isOpen) {\n            if (value) {\n                this.accordion.closeOtherPanels(this);\n            }\n            this._isOpen = value;\n            Promise.resolve(null)\n                .then(() => {\n                this.isOpenChange.emit(value);\n            });\n        }\n    }\n    constructor(accordion) {\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** Provides an ability to use Bootstrap's contextual panel classes\n         * (`panel-primary`, `panel-success`, `panel-info`, etc...).\n         * List of all available classes [available here]\n         * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\n         */\n        this.panelClass = 'panel-default';\n        /** if <code>true</code> \u2014 disables accordion group */\n        this.isDisabled = false;\n        /** Emits when the opened state changes */\n        this.isOpenChange = new EventEmitter();\n        this._isOpen = false;\n        this.accordion = accordion;\n    }\n    ngOnInit() {\n        this.accordion.addGroup(this);\n    }\n    ngOnDestroy() {\n        this.accordion.removeGroup(this);\n    }\n    toggleOpen() {\n        if (!this.isDisabled) {\n            this.isOpen = !this.isOpen;\n        }\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionPanelComponent, deps: [{ token: AccordionComponent }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.4\", type: AccordionPanelComponent, selector: \"accordion-group, accordion-panel\", inputs: { heading: \"heading\", panelClass: \"panelClass\", isDisabled: \"isDisabled\", isOpen: \"isOpen\" }, outputs: { isOpenChange: \"isOpenChange\" }, host: { properties: { \"class.panel-open\": \"this.isOpen\" }, styleAttribute: \"display: block\", classAttribute: \"panel\" }, ngImport: i0, template: \"<div class=\\\"panel card\\\" [ngClass]=\\\"panelClass\\\">\\n  <div\\n    class=\\\"panel-heading card-header\\\"\\n    role=\\\"tab\\\"\\n    (click)=\\\"toggleOpen()\\\"\\n    [ngClass]=\\\"isDisabled ? 'panel-disabled' : 'panel-enabled'\\\"\\n  >\\n    <div class=\\\"panel-title\\\">\\n      <div role=\\\"button\\\" class=\\\"accordion-toggle\\\" [attr.aria-expanded]=\\\"isOpen\\\">\\n        <button class=\\\"btn btn-link\\\" *ngIf=\\\"heading\\\" [ngClass]=\\\"{ 'text-muted': isDisabled }\\\" type=\\\"button\\\">\\n          {{ heading }}\\n        </button>\\n        <ng-content select=\\\"[accordion-heading]\\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" [collapse]=\\\"!isOpen\\\" [isAnimated]=\\\"isAnimated\\\">\\n    <div class=\\\"panel-body card-block card-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host .card-header.panel-enabled{cursor:pointer}:host .card-header.panel-disabled .btn.btn-link{cursor:default;text-decoration:none}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.CollapseDirective, selector: \"[collapse]\", inputs: [\"display\", \"isAnimated\", \"collapse\"], outputs: [\"collapsed\", \"collapses\", \"expanded\", \"expands\"], exportAs: [\"bs-collapse\"] }] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionPanelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'accordion-group, accordion-panel', host: {\n                        class: 'panel',\n                        style: 'display: block'\n                    }, template: \"<div class=\\\"panel card\\\" [ngClass]=\\\"panelClass\\\">\\n  <div\\n    class=\\\"panel-heading card-header\\\"\\n    role=\\\"tab\\\"\\n    (click)=\\\"toggleOpen()\\\"\\n    [ngClass]=\\\"isDisabled ? 'panel-disabled' : 'panel-enabled'\\\"\\n  >\\n    <div class=\\\"panel-title\\\">\\n      <div role=\\\"button\\\" class=\\\"accordion-toggle\\\" [attr.aria-expanded]=\\\"isOpen\\\">\\n        <button class=\\\"btn btn-link\\\" *ngIf=\\\"heading\\\" [ngClass]=\\\"{ 'text-muted': isDisabled }\\\" type=\\\"button\\\">\\n          {{ heading }}\\n        </button>\\n        <ng-content select=\\\"[accordion-heading]\\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" [collapse]=\\\"!isOpen\\\" [isAnimated]=\\\"isAnimated\\\">\\n    <div class=\\\"panel-body card-block card-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\":host .card-header.panel-enabled{cursor:pointer}:host .card-header.panel-disabled .btn.btn-link{cursor:default;text-decoration:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: AccordionComponent, decorators: [{\n                    type: Inject,\n                    args: [AccordionComponent]\n                }] }]; }, propDecorators: { heading: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }], isOpen: [{\n                type: HostBinding,\n                args: ['class.panel-open']\n            }, {\n                type: Input\n            }] } });\n\nclass AccordionModule {\n    static forRoot() {\n        return { ngModule: AccordionModule, providers: [] };\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionModule, declarations: [AccordionComponent, AccordionPanelComponent], imports: [CommonModule, CollapseModule], exports: [AccordionComponent, AccordionPanelComponent] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionModule, imports: [CommonModule, CollapseModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.4\", ngImport: i0, type: AccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CollapseModule],\n                    declarations: [AccordionComponent, AccordionPanelComponent],\n                    exports: [AccordionComponent, AccordionPanelComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AccordionComponent, AccordionConfig, AccordionModule, AccordionPanelComponent };\n//# sourceMappingURL=ngx-bootstrap-accordion.mjs.map\n"],
  "mappings": "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",
  "names": []
}
